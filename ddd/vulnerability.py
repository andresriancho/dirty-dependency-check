class Vulnerability(object):
    def __init__(self, dependency_name, dependency_version, cve, cvss,
                 nist_vendor_name, nist_product_name):
        self.dependency_name = dependency_name
        self.dependency_version = dependency_version
        self.cve = cve
        self.cvss = cvss
        self.nist_vendor_name = nist_vendor_name
        self.nist_product_name = nist_product_name

    def __eq__(self, other):
        return self.dependency_name == other.dependency_name and \
               self.dependency_version == other.dependency_version and \
               self.cve == other.cve and \
               self.cvss == other.cvss and \
               self.nist_vendor_name == other.nist_vendor_name and \
               self.nist_product_name == other.nist_product_name

    @classmethod
    def from_parts(cls, dependency, affected_vendor, cve_item):
        cve = cve_item['cve']['CVE_data_meta']['ID']

        try:
            cvss = cve_item['impact']['baseMetricV3']['cvssV3']['baseScore']
        except KeyError:
            cvss = cve_item['impact']['baseMetricV2']['cvssV2']['baseScore']

        return cls(dependency.name,
                   dependency.version,
                   cve,
                   cvss,
                   affected_vendor.vendor_name,
                   affected_vendor.product_name)

    def __str__(self):
        args = (self.dependency_name, self.dependency_version)
        return '<Vulnerability %s @ %s>' % args

    __repr__ = __str__
